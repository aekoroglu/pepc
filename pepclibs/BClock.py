# -*- coding: utf-8 -*-
# vim: ts=4 sw=4 tw=100 et ai si
#
# Copyright (C) 2020-2022 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause
#
# Authors: Antti Laakso <antti.laakso@linux.intel.com>
#          Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
#
# Contributor: Len Brown <len.brown@intel.com>

"""
This module provides a capability for discovering bus clock speed (FSB speed) on Intel CPUs.
"""

from pepclibs import CPUInfo
from pepclibs.msr import MSR
from pepclibs.helperlibs.Exceptions import Error, ErrorNotSupported

# CPUs with 100Mhz bus clock.
_BCLK_100MHZ = CPUInfo.GNRS +         \
               CPUInfo.EMRS +         \
               CPUInfo.METEORLAKES +  \
               CPUInfo.SPRS +         \
               CPUInfo.RAPTORLAKES +  \
               CPUInfo.ALDERLAKES +   \
               CPUInfo.ROCKETLAKES +  \
               CPUInfo.TIGERLAKES +   \
               CPUInfo.LAKEFIELDS +   \
               CPUInfo.ICELAKES +     \
               CPUInfo.COMETLAKES +   \
               CPUInfo.KABYLAKES +    \
               CPUInfo.CANNONLAKES +  \
               CPUInfo.SKYLAKES +     \
               CPUInfo.BROADWELLS +   \
               CPUInfo.HASWELLS +     \
               CPUInfo.IVYBRIDGES +   \
               CPUInfo.SANDYBRIDGES + \
               CPUInfo.CRESMONTS +    \
               CPUInfo.TREMONTS +     \
               CPUInfo.GOLDMONTS +    \
               CPUInfo.PHIS

_BCLK_100MHZ_SET = set(_BCLK_100MHZ)

def get_bclk(pman, cpu=0, cpuinfo=None, msr=None):
    """
    Discover bus clock speed for CPU 'cpu' in megahertz (MHz). The arguments are as follows.
      * pman - the process manager object that defines the host to discover bus clock speed for.
      * cpu - CPU number to discover the bus clock speed for. Can be an integer or a string with
              an integer number.
      * cpuinfo - CPU information object generated by 'CPUInfo.CPUInfo()'.
      * msr - an 'MSR.MSR()' object which should be used for accessing MSR registers.
    """

    close_cpuinfo = False
    close_msr = False
    bclk = None

    try:
        if not cpuinfo:
            cpuinfo = CPUInfo.CPUInfo(pman=pman)
            close_cpuinfo = True

        if cpuinfo.info["vendor"] != "GenuineIntel":
            raise Error(f"unsupported vendor {cpuinfo.info['vendor']}{pman.hostmsg}. Only Intel "
                        f"CPUs are supported.")

        if cpuinfo.info["model"] in _BCLK_100MHZ_SET:
            bclk = 100.0
        else:
            if not msr:
                msr = MSR.MSR(pman, cpuinfo=cpuinfo)
                close_msr = True

            # Some platforms provide bus clock via 'MSR_FSB_FREQ'.
            from pepclibs.msr import FSBFreq # pylint: disable=import-outside-toplevel

            fsbfreq = FSBFreq.FSBFreq(pman=pman, cpuinfo=cpuinfo, msr=msr)
            try:
                bclk = fsbfreq.read_cpu_feature("fsb", cpu)
            except ErrorNotSupported:
                # Fall back to 133.33 clock speed.
                bclk = 133.33
    finally:
        if close_msr:
            msr.close()
        if close_cpuinfo:
            cpuinfo.close()

    return bclk
