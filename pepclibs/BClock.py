# -*- coding: utf-8 -*-
# vim: ts=4 sw=4 tw=100 et ai si
#
# Copyright (C) 2020-2022 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause
#
# Authors: Antti Laakso <antti.laakso@linux.intel.com>
#          Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
#
# Contributor: Len Brown <len.brown@intel.com>

"""
This module provides a capability for discoviring bus clock speed (FSB speed) on Intel CPUs.
"""

from pepclibs import CPUInfo
from pepclibs.msr import MSR
from pepclibs.helperlibs.Exceptions import Error

# CPUs with 100Mhz bus clock.
_BCLK_100MHZ = {
        # Xeons.
        CPUInfo.INTEL_FAM6_SAPPHIRERAPIDS_X,
        CPUInfo.INTEL_FAM6_ICELAKE_X,
        CPUInfo.INTEL_FAM6_ICELAKE_D,
        CPUInfo.INTEL_FAM6_SKYLAKE_X,
        CPUInfo.INTEL_FAM6_BROADWELL_X,
        CPUInfo.INTEL_FAM6_BROADWELL_D,
        CPUInfo.INTEL_FAM6_BROADWELL_G,
        CPUInfo.INTEL_FAM6_HASWELL_X,
        CPUInfo.INTEL_FAM6_HASWELL_G,
        CPUInfo.INTEL_FAM6_IVYBRIDGE_X,
        CPUInfo.INTEL_FAM6_SANDYBRIDGE_X,
        # Clients.
        CPUInfo.INTEL_FAM6_ALDERLAKE,
        CPUInfo.INTEL_FAM6_ALDERLAKE_L,
        CPUInfo.INTEL_FAM6_ROCKETLAKE,
        CPUInfo.INTEL_FAM6_LAKEFIELD,
        CPUInfo.INTEL_FAM6_TIGERLAKE,
        CPUInfo.INTEL_FAM6_TIGERLAKE_L,
        CPUInfo.INTEL_FAM6_ICELAKE_L,
        CPUInfo.INTEL_FAM6_COMETLAKE,
        CPUInfo.INTEL_FAM6_COMETLAKE_L,
        CPUInfo.INTEL_FAM6_KABYLAKE_L,
        CPUInfo.INTEL_FAM6_KABYLAKE,
        CPUInfo.INTEL_FAM6_CANNONLAKE_L,
        CPUInfo.INTEL_FAM6_SKYLAKE,
        CPUInfo.INTEL_FAM6_SKYLAKE_L,
        CPUInfo.INTEL_FAM6_BROADWELL,
        CPUInfo.INTEL_FAM6_HASWELL,
        CPUInfo.INTEL_FAM6_HASWELL_L,
        CPUInfo.INTEL_FAM6_IVYBRIDGE,
        CPUInfo.INTEL_FAM6_SANDYBRIDGE,
        # Atoms.
        CPUInfo.INTEL_FAM6_ATOM_TREMONT,
        CPUInfo.INTEL_FAM6_ATOM_TREMONT_L,
        CPUInfo.INTEL_FAM6_ATOM_GOLDMONT,
        CPUInfo.INTEL_FAM6_ATOM_GOLDMONT_PLUS,
        # Atom microservers.
        CPUInfo.INTEL_FAM6_TREMONT_D,
        CPUInfo.INTEL_FAM6_GOLDMONT_D,
        # Other.
        CPUInfo.INTEL_FAM6_ICELAKE_NNPI,
        CPUInfo.INTEL_FAM6_XEON_PHI_KNL,
        CPUInfo.INTEL_FAM6_XEON_PHI_KNM,
}

def get_bclk(proc, cpu=0, cpuinfo=None, msr=None):
    """
    Discover bus clock speed for CPU 'cpu' in megahertz (MHz). The arguments are as follows.
      * proc - the 'Proc' or 'SSH' object that defines the host to discover bus clock speed for.
      * cpu - CPU number to discover the bus clock speed for. Can be an integer or a string with
              an integer number.
      * cpuinfo - CPU information object generated by 'CPUInfo.CPUInfo()'.
      * msr - an 'MSR.MSR()' object which should be used for accessing MSR registers.
    """

    close_cpuinfo = False
    close_msr = False
    bclk = None

    try:
        if not cpuinfo:
            cpuinfo = CPUInfo.CPUInfo(proc=proc)
            close_cpuinfo = True

        if cpuinfo.info["vendor"] != "GenuineIntel":
            raise Error(f"unsupported vendor {cpuinfo.info['vendor']}{proc.hostmsg}. Only Intel "
                        f"CPUs are supported.")

        if cpuinfo.info["model"] in _BCLK_100MHZ:
            bclk = 100.0
        else:
            if not msr:
                msr = MSR.MSR(proc, cpuinfo=cpuinfo)
                close_msr = True

            # Some platforms provide bus clock via 'MSR_FSB_FREQ'.
            from pepclibs.msr import FSBFreq # pylint: disable=import-outside-toplevel

            fsbfreq = FSBFreq.FSBFreq(proc=proc, cpuinfo=cpuinfo, msr=msr)
            if fsbfreq.is_cpu_feature_supported("fsb", cpu):
                bclk = fsbfreq.read_cpu_feature("fsb", cpu)
            else:
                # Fall back to 133.33 clock speed.
                bclk = 133.33
    finally:
        if close_msr:
            msr.close()
        if close_cpuinfo:
            cpuinfo.close()

    return bclk
